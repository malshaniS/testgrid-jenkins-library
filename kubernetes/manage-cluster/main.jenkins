/*
* Copyright (c) 2022 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
*
* WSO2 Inc. licenses this file to you under the Apache License,
* Version 2.0 (the "License"); you may not use this file except
* in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*
*/

pipeline {
    agent {label 'pipeline-kubernetes-agent'}
    environment {
        EKS_CLUSTER_REGION = 'us-east-1'   
        EKS_CLUSTER_NAME = 'testgrid-eks-cluster'
        RDS_STACK_NAME = 'testgrid-rds-stack'                           
    }
    stages {
        stage('Clone repo') {
            steps {
                script {
                    properties([
                        parameters([
                            booleanParam(
                                name: 'create_new_cluster',
                                defaultValue: true,
                                description: 'If selected new kubernetes cluster will be created, based on the cloud formation script provided in the above repository.'
                            ),
                            booleanParam(
                                name: 'delete_cluster_at_end',
                                defaultValue: false,
                                description: 'If selected kubernetes cluster will be deleted at the end of the testing.'
                            )
                        ])
                    ])
                }
                sh "chmod +x -R ${env.WORKSPACE}"
            }
        }
        stage('Create cluster') {
            when {
                expression { create_new_cluster.toBoolean() && !delete_cluster_at_end.toBoolean()}
            }
            steps {
                script {
                    echo "Create cluster stage"
                    
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: "testgrid-aws-kubernetes",
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {
                        sh '''
                            ls
                            ./kubernetes/manage-cluster/scripts/create-cluster.sh
                        '''
                    }
                }
            }
        }
        stage('Delete cluster') {
            when {
                expression {delete_cluster_at_end.toBoolean() && !create_new_cluster.toBoolean()}
            }
            steps {
                script {
                    echo "Deleting cluster in progress."
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: "testgrid-aws-kubernetes",
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {
                        sh '''
                        ls
                            ./kubernetes/manage-cluster/scripts/delete-cluster.sh
                        '''
                    }
                    
                }
            }
        }
    }
    post {
        always {
            
            cleanWs deleteDirs: true, notFailBuild: true
        }
    }
}
